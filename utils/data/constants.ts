export declare const INFORMATIONAL: {
    readonly 100: "100 - Continue";
    readonly 101: "101 - Switching Protocols";
    readonly 102: "102 - Processing";
};
export declare const HTTP_SUCCESS: {
    readonly 200: "200 - OK";
    readonly 201: "201 - Created";
    readonly 202: "202 - Accepted";
    readonly 203: "203 - Non-authoritative Information";
    readonly 204: "204 - No Content";
    readonly 205: "205 - Reset Content";
    readonly 206: "206 - Partial Content";
    readonly 207: "207 - Multi-Status";
    readonly 208: "208 - Already Reported";
    readonly 209: "209 - IM Used";
};
export declare const REDIRECTION: {
    readonly 300: "300 - Multiple Choices";
    readonly 301: "301 - Moved Permanently";
    readonly 302: "302 - Found";
    readonly 303: "303 - See Other";
    readonly 304: "304 - Not Modified";
    readonly 305: "305 - Use Proxy";
    readonly 307: "307 - Temporary Redirect";
    readonly 308: "308 - Permanent Redirect";
};
export declare const CLIENT_ERROR: {
    readonly 400: "400 - Bad Request";
    readonly 401: "401 - Unauthorized";
    readonly 402: "402 - Payment Required";
    readonly 403: "403 - Forbidden";
    readonly 404: "404 - Not Found";
    readonly 405: "405 - Method Not Allowed";
    readonly 406: "406 - Not Acceptable";
    readonly 407: "407 - Proxy Authentication Required";
    readonly 408: "408 - Request Timeout";
    readonly 409: "409 - Conflict";
    readonly 410: "410 - Gone";
    readonly 411: "411 - Length Required";
    readonly 412: "412 - Precondition Failed";
    readonly 413: "413 - Payload Too Large";
    readonly 414: "414 - Request-URI Too Long";
    readonly 415: "415 - Unsupported Media Type";
    readonly 416: "416 - Requested Range Not Satisfiable";
    readonly 417: "417 - Expectation Failed";
    readonly 418: "418 - I'm a teapot";
    readonly 421: "421 - Misdirected Request";
    readonly 422: "422 - Unprocessable Entity";
    readonly 423: "423 - Locked";
    readonly 424: "424 - Failed Dependency";
    readonly 426: "426 - Upgrade Required";
    readonly 428: "428 - Precondition Required";
    readonly 429: "429 - Too Many Requests";
    readonly 431: "431 - Request Header Fields Too Large";
    readonly 444: "444 - Connection Closed Without Response";
    readonly 451: "451 - Unavailable For Legal Reasons";
    readonly 499: "499 - Client Closed Request";
};
export declare const HTTP_SERVER_ERROR: {
    readonly 500: "500 - Internal Server Error";
    readonly 501: "501 - Not Implemented";
    readonly 502: "502 - Bad Gateway";
    readonly 503: "503 - Service Unavailable";
    readonly 504: "504 - Gateway Timeout";
    readonly 505: "505 - HTTP Version Not Supported";
    readonly 506: "506 - Variant Also Negotiates";
    readonly 507: "507 - Insufficient Storage";
    readonly 508: "508 - Loop Detected";
    readonly 510: "510 - Not Extended";
    readonly 511: "511 - Network Authentication Required";
    readonly 599: "599 - Network Connect Timeout Error";
};
export declare const HTTP_CODES: {
    readonly 500: "500 - Internal Server Error";
    readonly 501: "501 - Not Implemented";
    readonly 502: "502 - Bad Gateway";
    readonly 503: "503 - Service Unavailable";
    readonly 504: "504 - Gateway Timeout";
    readonly 505: "505 - HTTP Version Not Supported";
    readonly 506: "506 - Variant Also Negotiates";
    readonly 507: "507 - Insufficient Storage";
    readonly 508: "508 - Loop Detected";
    readonly 510: "510 - Not Extended";
    readonly 511: "511 - Network Authentication Required";
    readonly 599: "599 - Network Connect Timeout Error";
    readonly 400: "400 - Bad Request";
    readonly 401: "401 - Unauthorized";
    readonly 402: "402 - Payment Required";
    readonly 403: "403 - Forbidden";
    readonly 404: "404 - Not Found";
    readonly 405: "405 - Method Not Allowed";
    readonly 406: "406 - Not Acceptable";
    readonly 407: "407 - Proxy Authentication Required";
    readonly 408: "408 - Request Timeout";
    readonly 409: "409 - Conflict";
    readonly 410: "410 - Gone";
    readonly 411: "411 - Length Required";
    readonly 412: "412 - Precondition Failed";
    readonly 413: "413 - Payload Too Large";
    readonly 414: "414 - Request-URI Too Long";
    readonly 415: "415 - Unsupported Media Type";
    readonly 416: "416 - Requested Range Not Satisfiable";
    readonly 417: "417 - Expectation Failed";
    readonly 418: "418 - I'm a teapot";
    readonly 421: "421 - Misdirected Request";
    readonly 422: "422 - Unprocessable Entity";
    readonly 423: "423 - Locked";
    readonly 424: "424 - Failed Dependency";
    readonly 426: "426 - Upgrade Required";
    readonly 428: "428 - Precondition Required";
    readonly 429: "429 - Too Many Requests";
    readonly 431: "431 - Request Header Fields Too Large";
    readonly 444: "444 - Connection Closed Without Response";
    readonly 451: "451 - Unavailable For Legal Reasons";
    readonly 499: "499 - Client Closed Request";
    readonly 300: "300 - Multiple Choices";
    readonly 301: "301 - Moved Permanently";
    readonly 302: "302 - Found";
    readonly 303: "303 - See Other";
    readonly 304: "304 - Not Modified";
    readonly 305: "305 - Use Proxy";
    readonly 307: "307 - Temporary Redirect";
    readonly 308: "308 - Permanent Redirect";
    readonly 200: "200 - OK";
    readonly 201: "201 - Created";
    readonly 202: "202 - Accepted";
    readonly 203: "203 - Non-authoritative Information";
    readonly 204: "204 - No Content";
    readonly 205: "205 - Reset Content";
    readonly 206: "206 - Partial Content";
    readonly 207: "207 - Multi-Status";
    readonly 208: "208 - Already Reported";
    readonly 209: "209 - IM Used";
    readonly 100: "100 - Continue";
    readonly 101: "101 - Switching Protocols";
    readonly 102: "102 - Processing";
};